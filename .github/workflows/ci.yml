name: Build app

on:
  push:
    tags:
      - '**'

env:
  CARGO_TERM_COLOR: always

jobs:
  build_rust_linux:
    name: Linux - Rust app
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo build --release
      - run: mv ./target/release/server ./target/release/schedulator
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact-linux
          retention-days: 1
          path: |
            ./target/release/schedulator
            ${{ steps.compile.outputs.BUILT_ARCHIVE }}
            ${{ steps.compile.outputs.BUILT_CHECKSUM }}

  build_rust_linux_musl:
    name: Linux Musl - Rust app
    runs-on: ubuntu-22.04
    container: ghcr.io/blackdex/rust-musl:x86_64-musl
    steps:
      - uses: actions/checkout@v4
      - run: cargo build --release
      - run: mv ./target/x86_64-unknown-linux-musl/release/server ./target/x86_64-unknown-linux-musl/release/schedulator
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact-linux_musl
          retention-days: 1
          path: |
            ./target/x86_64-unknown-linux-musl/release/schedulator
            ${{ steps.compile.outputs.BUILT_ARCHIVE }}
            ${{ steps.compile.outputs.BUILT_CHECKSUM }}

  build_web_app:
    name: Web app
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - working-directory: ./webclient
        run: npm install
      - working-directory: ./webclient
        run: npm run prod
      - uses: actions/upload-artifact@v4
        with:
          name: webapp-artifact
          retention-days: 1
          path: ./webclient/public/*

  package:
    name: Upload release
    runs-on: ubuntu-22.04
    needs: [build_rust_linux, build_web_app, build_rust_linux_musl]
    steps:
      - uses: actions/checkout@v4
      
      # Download webapp build artifacts
      - name: Retrieve artifact Web app
        uses: actions/download-artifact@v4
        with:
          name: webapp-artifact
          path: ./artifact_web_app/public

      # Create Docker setup zip
      - run: mv docker schedulator-dockerized
      - run: zip -r schedulator-dockerized.zip ./schedulator-dockerized/

      # Create Linux server zip
      - name: Retrieve artifact Rust/Linux
        uses: actions/download-artifact@v4
        with:
          name: artifact-linux
          path: ./artifact_rust_linux
      - run: mkdir schedulator/
      - run: mkdir schedulator/migrations/
      - run: mv ./artifact_rust_linux/schedulator ./schedulator/
      - run: cp -r ./migrations/ ./schedulator/migrations/
      - run: cp -r ./artifact_web_app/* ./schedulator/
      - run: zip -r schedulator_linux.zip ./schedulator/
      - run: rm -r ./schedulator/

      # Create Linux Musl server zip
      - name: Retrieve artifact Rust/Linux/Musl
        uses: actions/download-artifact@v4
        with:
          name: artifact-linux_musl
          path: ./artifact_rust_linux_musl

      - run: mkdir schedulator/
      - run: mkdir schedulator/migrations/
      - run: mv ./artifact_rust_linux_musl/schedulator ./schedulator/
      - run: cp -r ./migrations/ ./schedulator/migrations/
      - run: cp -r ./artifact_web_app/* ./schedulator/
      - run: zip -r schedulator_linux_musl.zip ./schedulator/
      - run: rm -r ./schedulator/

#      # Generate changelog
#      - name: "Generate release changelog"
#        uses: janheinrichmerker/action-github-changelog-generator@v2.3
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          output: CHANGELOG.md

      # Upload release
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
#          body_path: CHANGELOG.md
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            schedulator_linux.zip
            schedulator_linux_musl.zip
            schedulator-dockerized.zip
